spring.application.name = yuanhan-Job

#tomcat em
server.port = 7678
server.context-path = /scheduler
server.domain = localhost
## request uri query string encoding
server.tomcat.uri-encoding = UTF-8
server.tomcat.compression = on

server.tomcat.min-spare-threads = 10

spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/META-INF/resources/,\
									classpath:/resources/,\
									classpath:/static/,\
									classpath:/public/,\
									file:/app/service/scheduler/static/
springfox.documentation.swagger.v2.path = /docs/v2/api-docs

########################################################
### Spring Security Oauth2
########################################################
security.oauth2.client.client-authentication-scheme = header,form,query
security.oauth2.client.authentication-scheme = header,form,query



########################################################
### Spring boot request body encoding
########################################################
spring.http.encoding.force = true
##force request
##spring.http.encoding.force-request = true
##force response
##spring.http.encoding.force-response = true
spring.http.encoding.charset = UTF-8
# tomcat server.xml default connector iso-8859-1 
#  request.getParameter
spring.http.encoding.enabled = true

spring.output.ansi.enabled = ALWAYS



########################################################
### Spring boot error
########################################################
server.error.whitelabel.enabled=true
server.error.path = /error
spring.mvc.throw-exception-if-no-handler-found=true

logging.config=classpath:yuanhan_logger.xml



########################################################
### Spring boot i18n messages
########################################################
spring.messages.always-use-message-format=false
spring.messages.basename=i18n/messages,error/exception,error/validation
spring.messages.cache-seconds=-1
spring.messages.encoding=UTF-8
spring.messages.fallback-to-system-locale=true




########################################################
### Tomcat Access Log
########################################################
 # Buffer output such that it is only flushed periodically.
server.tomcat.accesslog.buffered=true
 # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.
server.tomcat.accesslog.directory=${logging.path:e:/logs}
 # Enable access log.
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
 # Format pattern for access logs.tail 
server.tomcat.accesslog.pattern=[%t] [%I] [port:%p] [%{X-Forwarded-For}i] [%a] [%r] [%s] [%D ms] [%b bytes] [%{Referer}i] [%{User-Agent}i]
 # Log file name prefix.
server.tomcat.accesslog.prefix=access_log
 # Defer inclusion of the date stamp in the file name until rotate time.
server.tomcat.accesslog.rename-on-rotate=true
 # Set request attributes for IP address, Hostname, protocol and port used for the request.
server.tomcat.accesslog.request-attributes-enabled=false
 # Enable access log rotation.
server.tomcat.accesslog.rotate=true
server.tomcat.accesslog.suffix=.log




########################################################
### Spring boot application properties configuration
########################################################
#http://docs.spring.io/spring-boot/docs/1.5.7.RELEASE/reference/htmlsingle/#common-application-properties




########################################################
### Spring boot Batch properties configuration
########################################################
spring.batch.job.enabled=false
spring.batch.initializer.enabled = false
spring.batch.table-prefix=SCHED_






########################################################
### Java Persistence Apick 
########################################################
spring.data.jpa.repositories.enabled=true
spring.jpa.database = POSTGRESQL
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = none
spring.jpa.properties.hibernate.default_schema = bidding
spring.jpa.hibernate.naming.implicit-strategy = com.yuanhan.yuanhan.core.dao.CustomizeImplicitNamingStrategy
spring.jpa.hibernate.naming.physical-strategy = com.yuanhan.yuanhan.core.dao.CustomizedPhysicalNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
#spring.jpa.properties.hibernate.current_session_context_class = org.springframework.orm.hibernate5.SpringSessionContext

spring.datasource.url = jdbc:postgresql://120.76.214.182:5432/yuanhan-bidding?currentSchema=bidding&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username = odoo
spring.datasource.password = odoo
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.max-active = 5
spring.datasource.max-idle = 5
spring.datasource.min-idle = 3
spring.datasource.initial-size = 3
# 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
#spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
#spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

# FileUpLoadAndDownLoad
# 取消spring缓存模板
spring.http.multipart.enabled=true
spring.http.multipart.file-size-threshold=0
spring.http.multipart.max-file-size=4MB
spring.http.multipart.max-request-size=10MB

# job
org.quartz.scheduler.skipUpdateCheck=true